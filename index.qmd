---
title: "Analysis of Reported Car Crashes in Montgomery County, MD"
author: "Adriana Vance and Elena Koshkin"
format: html
code-fold: true
    code-summary: "Show the code"
editor: visual
Data source: https://catalog.data.gov/dataset/crash-reporting-drivers-data 
warning = FALSE
---

```{r}
Crash <- read.csv("Crash.csv")

library(ggplot2)
library(dplyr)
library(tigris)
library(sf)

```

## Visualization 1

```{r}
Crash %>%
  group_by(Collision.Type) %>%
  summarize(count = n()) %>%
  filter(count > 10000) %>%
  filter(Collision.Type != "OTHER") %>%
  ggplot() + 
  geom_col(mapping = aes(y = count, x = Collision.Type, color = Collision.Type, fill = Collision.Type), alpha = 0.5) + 
  theme(axis.text.x = element_blank()) + 
  labs(
    x = "Collision Type",
    y = "Total Collisions",
    caption = "Source: https://catalog.data.gov/dataset/crash-reporting-drivers-data "
  )
```

## Visualization 2

```{r}

sf_data <- st_as_sf(Crash, coords = c("Longitude", "Latitude"), crs = 4326)

# Get the county boundaries for the entire state of Maryland
maryland_counties <- counties("MD")
# Filter Montgomery County
montgomery_county <- maryland_counties[maryland_counties$NAME == "Montgomery", ]

montgomery_roads <- roads("MD", "Montgomery")

filtered_crash_data <- sf_data %>%
  group_by(ACRS.Report.Type) %>%
  filter(ACRS.Report.Type == "Fatal Crash") %>%
  summarize(count = n())

montgomery_roads %>%
  ggplot() + 
   geom_sf(data = montgomery_county) +
    geom_sf(data = montgomery_roads, color = "blue", alpha = 0.3) +
  geom_sf(data = filtered_crash_data, aes(color = "Location of Crashes")) + 
  labs(
    title = "Fatal Crashes 2015-2023", caption = "Source: https://catalog.data.gov/dataset/crash-reporting-drivers-data") + 
  theme_void() + 
  scale_color_manual(
    name = "",
    values = c("Location of Crashes" = "red")
  )

```

## Visualization 3

```{r}
ggplot(Crash, aes(x=Speed.Limit)) + 
 geom_histogram(aes(y=after_stat(density)), colour="black", fill="white")+
 geom_density(alpha=.2, fill="#FF6666") 
# Color by groups
ggplot(Crash, aes(x=Speed.Limit, color=Driver.At.Fault, fill=Driver.At.Fault)) + 
 geom_histogram(aes(y=after_stat(density)), alpha=0.5, 
                position="identity")+
 geom_density(alpha=.2) +
  labs(
    x = "Speed Limit",
    y = "Density",
    caption = "Source: https://catalog.data.gov/dataset/crash-reporting-drivers-data"
  ) + theme(legend.title = element_text(colour="orange", size=8, 
                                      face="bold"))
  

```

## Visualization 4

```{r}

Crash %>%
  filter(Vehicle.Year > 1940 & Vehicle.Year < 2023) %>%
  filter(Injury.Severity == "FATAL INJURY") %>% 
  ggplot() +
  geom_dotplot(mapping = aes(x = Vehicle.Year, y = Injury.Severity, color = Injury.Severity, size = 10), alpha = 0.7, fill = "purple") + 
   labs(
     x = "Vehicle Year", 
     y = "Injury Severity", 
    caption = "Source: https://catalog.data.gov/dataset/crash-reporting-drivers-data"
  ) +
  theme_bw() +
  guides(color=guide_legend("Injury Severity"))


```
